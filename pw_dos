#!/usr/bin/env python

import sys,os,shutil
from w2k_utils import *
from struct_utils import *
from bandstruct import * 

myname_full = sys.argv[0]
myname = os.path.basename(myname_full)

def f_Help_Info():
  print "\n  "+myname_full + ": a Python script to calculate density of states using wien2k output \n"
  print "  Usage: " + myname + " [options]"\
  + """
  Options:
    -f <case_name>   # case name
    -d               # set the debug mode
    -h               # print out this information
    -efer            # Fermi energy used to set as zero, in units of Ry 
    -emax <emax>     # maximum energy in units of eV 
    -emin <emin>     # minimum energy in units of eV
    -de   <de_step>   # the spacing used for calculating the energy, in units of eV   
    -ikst <ik_start> # the index for the first k-vector to be considered 
    -ikend <ik_end>  # the index for the last k-vector to be considered 
    -t <tag>         # the tag for the energy file 
    -w <width>       # the broadening width in unit of eV
    -o <out_file>    # the name for the output file 
  """
  sys.exit(0)

if f_Getopt('-h',0,False): f_Help_Info()

debug     = f_Getopt('-d'     , 0,  False )
case_name = f_Getopt('-f'     , 1,     '' )
efermi    = f_Getopt('-efer'  , 1,    0.0 )
emax      = f_Getopt('-emax'  , 1,   15.0 )
emin      = f_Getopt('-emin'  , 1,  -15.0 )
ik_start  = f_Getopt('-ikst'  , 1,      0 )
ik_end    = f_Getopt('-ikend' , 1,      0 )
tag       = f_Getopt('-t'     , 1,     '' )
width     = f_Getopt('-w'     , 1,    0.3 ) 
de_step   = f_Getopt('-de'    , 1,   0.03 )
out_file  = f_Getopt('-o'     , 1,   ''   )    
nspin     = f_Getopt('-ns'    , 1,      2 )  

case_name = f_Check_Name(case_name)
nat = w2k_get(case_name,"nat")

enk_file = case_name+".energy"+tag.strip()
if out_file == '': out_file = case_name + '-dos'+tag.strip()+'.dat'

(enk,kwt,kvec) = f_Read_Energy(enk_file,nat,debug=False)

nkp = len(kwt)
if ik_end == 0 : ik_end = nkp - 1


# the number of energy points 
np = int((emax-emin)/de_step) + 1
ofile = open(out_file,'w') 
ofile.write("# DOS calculated by "+myname+"\n")
ofile.write("# Broadening width =%12.6f eV \n"%(width))

emax *= eV2Ry
emin *= eV2Ry
width *= eV2Ry
de_step *= eV2Ry

for i in range(np): 
  e = emin + i*de_step
  f = f_DOS(e,enk,kwt,width,ik_start,ik_end) 
  e = (e-efermi) * Ry2eV  
  f = nspin*f/Ry2eV 
  ofile.write("%12.6f\t%12.6f\n"%(e,f))
  if debug: print "%12.6f\t%12.6f"%(e,f) 
  
ofile.close()
  
