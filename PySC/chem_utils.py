#!/usr/bin/env python
from math import *
#eV_per_Ry = 13.6056917
#ev_per_Ha = 27.2113834
#An_per_Bohr = 0.5292083
#kcal_per_eV = 23.06
#
#Pi = 3.14159265359
#Bohr2Ang = 0.5292083
#Ang2Bohr = 1.0/Bohr2Ang
#Deg2Rad = Pi/180.0
#Rad2Deg = 180.0/Pi
#Ry2eV = 13.6056917
#Ha2eV = 27.2113834
#eV2Ry = 1.0/Ry2eV
#eV2Ha = 1.0/Ha2eV
#c_LightSpeed = 2.997925E8
#
#eV2J = 1.60219E-19
#eV2K = 1.16048E4

elements = ['H' , 'He', 'Li', 'Be', 'B',  'C',  'N',  'O' , 'F' , 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P' , 'S',  'Cl', 'Ar', 'K' , 'Ca',\
            'Sc', 'Ti', 'V' , 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\
            'Rb', 'Sr', 'Y' , 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I' , 'Xe',\
            'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\
                  'Hf', 'Ta', 'W' , 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\
            'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U' , 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr',\
                  'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mg', 'Ds', 'Rg']
#     symbol, mass, default apparent charge
elements_info = [ \
     ('H ',   1.00, 1),\
     ('He',   4.00, 0),\
     ('Li',   6.94, 1,),\
     ('Be',   9.01, 2),\
     ('B ',  10.81, 3),\
     ('C ',  12.01, 4),\
     ('N ',  14.01, -3),\
     ('O ',  16.00, -2),\
     ('F ',  19.00, -1),\
     ('Ne',  20.18, 0),\
     ('Na',  22.99, 1),\
     ('Mg',  24.31, 2),\
     ('Al',  26.98, 3),\
     ('Si',  28.09, 4),\
     ('P ',  30.97, -3),\
     ('S ',  32.07, -2),\
     ('Cl',  35.45, -1),\
     ('Ar',  39.95, 0),\
     ('K ',  39.09, 1),\
     ('Ca',  40.08, 2),\
     ('Sc',  44.96, 3),\
     ('Ti',  47.87, 4),\
     ('V ',  50.94, 5),\
     ('Cr',  52.00, 4),\
     ('Mn',  54.94, 2),\
     ('Fe',  55.85, 2),\
     ('Co',  58.93, 2),\
     ('Ni',  58.69, 2),\
     ('Cu',  63.55, 1),\
     ('Zn',  65.41, 2),\
     ('Ga',  69.72, 3),\
     ('Ge',  72.64, 4),\
     ('As',  74.92, -3),\
     ('Se',  78.96, -2),\
     ('Br',  79.90, -1),\
     ('Kr',  83.80, 0 ),\
     ('Rb',  85.47, 1),\
     ('Sr',  87.62, 2),\
     ('Y ',  88.91, 3),\
     ('Zr',  91.22, 4),\
     ('Nb',  92.91, 5),\
     ('Mo',  95.94, 6),\
     ('Tc',  97.91, 2),\
     ('Ru', 101.07, 4),\
     ('Rh', 102.91, 3),\
     ('Pd', 106.42, 2),\
     ('Ag', 107.87, 1),\
     ('Cd', 112.41, 2),\
     ('In', 114.82, 3),\
     ('Sn', 118.71, 4),\
     ('Sb', 121.76, -3),\
     ('Te', 127.60, -2),\
     ('I ', 126.90, -1),\
     ('Xe', 131.29, 0),\
     ('Cs', 132.91, 1),\
     ('Ba', 137.33, 2),\
     ('La', 138.91, 3),\
     ('Ce', 140.12, 4),\
     ('Pr', 140.91, 3),\
     ('Nd', 144.24, 3),\
     ('Pm', 144.91, 3),\
     ('Sm', 150.36, 3),\
     ('Eu', 151.96, 3),\
     ('Gd', 157.25, 3),\
     ('Tb', 158.93, 3),\
     ('Dy', 162.50, 3),\
     ('Ho', 164.93, 3),\
     ('Er', 167.26, 3),\
     ('Tm', 168.93, 3),\
     ('Yb', 173.04, 3),\
     ('Lu', 174.97, 3),\
     ('Hf', 178.49, 4),\
     ('Ta', 180.95, 5),\
     ('W ', 183.84, 6),\
     ('Re', 186.21, 4),\
     ('Os', 190.23, 6),\
     ('Ir', 192.22, 7),\
     ('Pt', 195.08, 2),\
     ('Au', 196.97, 1),\
     ('Hg', 200.59, 2),\
     ('Tl', 204.38, 3),\
     ('Pb', 207.20, 4),\
     ('Bi', 208.98, 5),\
     ('Po', 208.98,-1),\
     ('At', 209.99, 0 ),\
     ('Rn', 222.02),\
     ('Fr', 223.02),\
     ('Ra', 226.03),\
     ('Ac', 227.03),\
     ('Th', 232.04),\
     ('Pa', 231.04),\
     ('U ', 238.03),\
     ('Np', 237.05),\
     ('Pu', 244.06),\
     ('Am', 243.06),\
     ('Cm', 247.07),\
     ('Bk', 247.07),\
     ('Cf', 251.08),\
     ('Es', 252.08),\
     ('Fm', 257.10),\
     ('Md', 258.10),\
     ('No', 259.10),\
     ('Lr', 260.11),\
     ('Rf', 261.11),\
     ('Db', 262.11),\
     ('Sg', 263.12),\
     ('Bh', 264.12),\
     ('Hs', 265.13),\
     ('Mt', 266.13),\
     ('Ds', 269.00),\
     ('Rg', 272.00)]  


def f_Element_Symbol_to_Z(symbl):
  try: 
    z = elements.index(symbl.strip()) + 1
  except:
    print "WARNING in f_Element_Symbol_to_Z: %s is not an element symbol" %(symbl)
    z = 0 
  return z

def f_Element_Symbol_to_Mass(symbl):
  z = f_Element_Symbol_to_Z(symbl) 
  return elements_info[z-1][1]

def f_Element_Z_to_Symbol(znucl):
  return elements[znucl-1]

