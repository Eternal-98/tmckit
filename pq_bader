#!/usr/bin/env python

import sys,os
from optparse import OptionParser

from qesp_utils import QESP_IO,QESP_PW_input
from common_caseutil import f_env_RunMpirunCommand

def QESP_Bader(stFileName,nProcess=1):
    '''
    Create a bader calculation input file and / or run it
    '''
    stCaseName = os.path.splitext(os.path.splitdrive(stFileName)[1])[0]
    qIn = QESP_PW_input(stFileName)
    ppIn = QESP_IO()
    ppIn.AddValue("inputPP","outdir",qIn.outdir)
    ppIn.AddValue("inputPP","prefix",qIn.prefix)
    ppIn.AddValue("inputPP","plot_num",0)
    ppIn.AddValue("inputPP","filplot",stCaseName+".charge.dat")
    ppIn.AddValue("plot","iflag",3)
    ppIn.AddValue("plot","output_format",6)
    stGaussName = stCaseName+".charge.gauss.dat"
    ppIn.AddValue("plot","fileout",stGaussName)
    stPPName = stCaseName+"_charge_pp"
    ppIn.WriteToFile(stPPName+".in")
    
    if ( nProcess != -1):
        status,stOut = f_env_RunMpirunCommand("pp.x < %s.in &> %s.out" %(stPPName,stPPName),nProcess)
        status,stOut = f_env_RunMpirunCommand("bader " + stGaussName,1)
        if ( status == 0):
            print("Please see the ACF.dat to check Bader charge of atoms.")

    return

def Main(ArgList):
    description = "Calculate bader AIM charge. ( need bader program )"
    usage = "pq_bader -p ProcessCount QEInputFile"
    parser = OptionParser(usage=usage,description=description)
    parser.add_option("-p",dest="stProcess",default="1",help="The process to run pp.x, -1 means not to run")
    (options,args) = parser.parse_args(ArgList)

    if ( len(args)!= 2):
        parser.error("incorrect number of arguments.")

    QESP_Bader(args[1],int(options.stProcess))

if __name__ == "__main__":
    Main(sys.argv)
