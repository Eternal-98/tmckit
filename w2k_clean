#!/bin/tcsh -f 
#
unalias rm

set name  = $0
set name  = $name:t 		#name of this script-file

alias sb 'shift; breaksw'

unset help
unset cont
unset para 
unset file 
unset verb
while ($#argv)
  switch ($1)
  case -h:
    set help; sb
  case -p:
    set para; sb 
  case -f:
    shift; set file = $1; sb                   # get case name from the command line if -f <case> exists
  case -v:
    set verb; sb; 
  default:
    echo "ERROR: option $1 does not exist!!"; set help; sb
  endsw
end

  if ($?help) goto help

  if (! $?file) then 
    set file = `pwd`
    set file = $file:t
  endif 

  if($?verb) echo "Clean case: " $file 

continue:

  set klist_save = ( band fbz ibz ) 
  foreach i ( $klist_save )
    if ( -e $file.klist_$i ) then 
      mv $file.klist_$i $file.klist$i
    endif 
  end 

  set cleanlist
  if($?para) then
     foreach ext ( energy klist normso output1 outputso scfso scf1 scf2 outputdm scfhf outputhf )  
       ( ls $file.${ext}*_* >.cleanlist )  >& /dev/null
       set cleanlist = ( $cleanlist `cat .cleanlist` )
     end 

     ( ls $file.output00* >.cleanlist )  >& /dev/null
     set cleanlist = ( $cleanlist `cat .cleanlist` )
  endif 

  foreach ext ( output0_ storeHinv vrespval_ vec help clmval_ clmvalup_ clmvaldn_ vorbup_ vorbdn_  output2_ output2up_ \
                output2dn_ weigh scfdm_ scfdmup_ scfdmdn_ dmat_ dmatup_ dmatdn_ \
                dmatud_ broyd nsh vint nval broy )
    ( ls $file.${ext}* *_old >.cleanlist )  >& /dev/null
    set cleanlist =( $cleanlist `cat .cleanlist` )
  end 

  foreach ext ( fort. ftn .command .running ':parallel' .lapw0para .lapw1para .lapw2para .lapwdmpara .min_hess .minrestart .processes .time This_file .mist .time_ .in.tmp '.lapw?para' .tmp '.time?_' scf2_  .minpair .script )
    ( ls ${ext}* >.cleanlist )  >& /dev/null
    set cleanlist = ( $cleanlist `cat .cleanlist`)
  end 
    
  foreach i ( $cleanlist )
    if($?verb) echo " remove file " $i
    rm -f $i 
  end 

  rm -f *.def *.error .cleanlist

  foreach i ( $klist_save )
    if ( -e $file.klist$i ) then
      mv $file.klist$i $file.klist_$i
    endif
  end

  exit (0)

help:
cat << theend 

PROGRAM:	$0

PURPOSE:	cleaning of a case subdirectory of WIEN95
		to be called within the case-directory
		deletes all files which are not necessary for continuation

USAGE:		$name 

FLAGS:
-h ->		help
-f <case name> 
-p ->           remove files generated by parallel jobs
theend

exit(1)
 
